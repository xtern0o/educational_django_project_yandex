# Generated by Django 4.2 on 2023-10-30 16:04

import catalog.validators
import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):
    replaces = [
        ("catalog", "0002_alter_category_normalized_name_and_more"),
        ("catalog", "0003_alter_category_name_alter_category_slug_and_more"),
        ("catalog", "0004_mainimage_alter_gallery_item_delete_image"),
        ("catalog", "0005_alter_gallery_options_alter_gallery_image_and_more"),
        ("catalog", "0006_alter_item_text"),
        ("catalog", "0007_item_is_on_main"),
        ("catalog", "0008_alter_category_options_alter_item_options_and_more"),
        (
            "catalog",
            "0009_alter_category_normalized_name_alter_gallery_item_and_more",
        ),
        ("catalog", "0010_alter_gallery_item_alter_item_category"),
    ]

    dependencies = [
        ("catalog", "0001_initial"),
    ]

    operations = [
        migrations.AlterField(
            model_name="category",
            name="normalized_name",
            field=models.CharField(
                default="-",
                max_length=300,
                unique=True,
                verbose_name="нормализованное имя",
            ),
        ),
        migrations.AlterField(
            model_name="tag",
            name="normalized_name",
            field=models.CharField(
                default="-",
                max_length=300,
                unique=True,
                verbose_name="нормализованное имя",
            ),
        ),
        migrations.AlterField(
            model_name="category",
            name="name",
            field=models.CharField(
                help_text="Название объекта (не более 150 символов)",
                max_length=150,
                unique=True,
                verbose_name="название",
            ),
        ),
        migrations.AlterField(
            model_name="category",
            name="slug",
            field=models.SlugField(
                help_text="Короткая метка для использования в URL (только латиница, цифры, подчеркивание и дефисы)",
                max_length=200,
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        re.compile("^[-a-zA-Z0-9_]+\\Z"),
                        "Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.",
                        "invalid",
                    )
                ],
                verbose_name="слаг",
            ),
        ),
        migrations.AlterField(
            model_name="category",
            name="weight",
            field=models.IntegerField(
                default=100,
                help_text="Вес (от 1 до 32767 включительно)",
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(32767),
                ],
                verbose_name="вес",
            ),
        ),
        migrations.AlterField(
            model_name="item",
            name="category",
            field=models.ForeignKey(
                help_text="Категория товара",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="catalog_name",
                to="catalog.category",
            ),
        ),
        migrations.AlterField(
            model_name="item",
            name="name",
            field=models.CharField(
                help_text="Название объекта (не более 150 символов)",
                max_length=150,
                unique=True,
                verbose_name="название",
            ),
        ),
        migrations.AlterField(
            model_name="item",
            name="tags",
            field=models.ManyToManyField(help_text="Тег", to="catalog.tag"),
        ),
        migrations.AlterField(
            model_name="item",
            name="text",
            field=models.TextField(
                help_text="Описание товара",
                validators=[
                    catalog.validators.ValidateMustContain(
                        "превосходно", "роскошно"
                    )
                ],
                verbose_name="текст",
            ),
        ),
        migrations.AlterField(
            model_name="tag",
            name="name",
            field=models.CharField(
                help_text="Название объекта (не более 150 символов)",
                max_length=150,
                unique=True,
                verbose_name="название",
            ),
        ),
        migrations.AlterField(
            model_name="tag",
            name="slug",
            field=models.SlugField(
                help_text="Короткая метка для использования в URL (только латиница, цифры, подчеркивание и дефисы)",
                max_length=200,
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        re.compile("^[-a-zA-Z0-9_]+\\Z"),
                        "Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.",
                        "invalid",
                    )
                ],
                verbose_name="слаг",
            ),
        ),
        migrations.AlterField(
            model_name="item",
            name="text",
            field=ckeditor.fields.RichTextField(
                help_text="Описание товара (должно содержать слово превосходно или роскошно)",
                validators=[
                    catalog.validators.ValidateMustContain(
                        "превосходно", "роскошно"
                    )
                ],
                verbose_name="текст",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="is_on_main",
            field=models.BooleanField(
                default=False,
                help_text="Отображать ли товар на главной странице?",
                verbose_name="на главной странице",
            ),
        ),
        migrations.AlterModelOptions(
            name="category",
            options={
                "ordering": ("name", "id"),
                "verbose_name": "категория",
                "verbose_name_plural": "категории",
            },
        ),
        migrations.AlterModelOptions(
            name="item",
            options={
                "ordering": ("name", "id"),
                "verbose_name": "товар",
                "verbose_name_plural": "товары",
            },
        ),
        migrations.AlterModelOptions(
            name="tag",
            options={
                "ordering": ("name", "id"),
                "verbose_name": "тег",
                "verbose_name_plural": "теги",
            },
        ),
        migrations.AlterField(
            model_name="item",
            name="category",
            field=models.ForeignKey(
                help_text="Категория товара",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="category_name",
                to="catalog.category",
            ),
        ),
        migrations.AlterField(
            model_name="category",
            name="normalized_name",
            field=models.CharField(
                default="-", max_length=300, verbose_name="нормализованное имя"
            ),
        ),
        migrations.CreateModel(
            name="MainImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="catalog/%Y/%m/%d/",
                        verbose_name="изображение",
                    ),
                ),
                (
                    "item",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="main_image",
                        to="catalog.item",
                        verbose_name="товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "главное изображение",
                "verbose_name_plural": "главные изображения",
            },
        ),
        migrations.AlterField(
            model_name="tag",
            name="normalized_name",
            field=models.CharField(
                default="-", max_length=300, verbose_name="нормализованное имя"
            ),
        ),
        migrations.CreateModel(
            name="Gallery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="catalog/%Y/%m/%d/",
                        verbose_name="изображение",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        related_query_name="image",
                        to="catalog.item",
                        verbose_name="товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "дополнительное изображение",
                "verbose_name_plural": "галерея",
            },
        ),
        migrations.AlterField(
            model_name="item",
            name="category",
            field=models.ForeignKey(
                help_text="Категория товара",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="category",
                related_query_name="category",
                to="catalog.category",
            ),
        ),
    ]
